services:
  server:
    image: server:1.0.0
    container_name: server-c-bs
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file: .env
    environment:
      PORT: ${PORT}
    ports:
      - 6801:${PORT}
    volumes:
      - ./server:/server
      - server-v-node-modules:/server/node_modules
    depends_on:
      database:
        condition: service_healthy

  database:
    image: database:1.0.0
    container_name: postgres-c-bs
    env_file:
      - .env
    user: postgres
    environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DATABASE}
        POSTGRES_USERNAME: ${POSTGRES_USERNAME}
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - 6800:${POSTGRES_PORT}
    volumes:
      - database-v-bs:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    command: "-p 6800"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p ${POSTGRES_PORT} -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 0s

volumes:
  database-v-bs:
    name: "database-v-bs"
  server-v-node-modules:
    name: "server-v-node-modules"